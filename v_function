#
# $Id: virtualenvwrapper_bashrc 1770 2008-11-11 13:02:26Z dhellmann $
#
# Shell functions to act as wrapper for Ian Bicking's virtualenv
# (http://pypi.python.org/pypi/virtualenv)
#



declare -a HOMES=("$HOME/src" "$HOME/tmp")


# Verify that the WORKON_HOME directory exists
function verify_homes () {
    for d in "${HOMES[@]}"
    do
        if [[ ! -d "$d" ]]
        then
            echo "ERROR: Virtual environments directory '$d' does not exist."
            return 1
        fi
    done
    return 0
}

# Verify that the requested environment exists
function verify_exists_environment () {
    declare env_name="$1"
    for d in "${HOMES[@]}"
    do
        if [[ -d "$d/$env_name" ]]
        then
           return 0
        fi
    done
    return 1
}


function get_environment () {
    declare env_name="$1"
    for d in "${HOMES[@]}"
    do
        if [[ -d "$d/$env_name" ]]
        then
           echo "$d/$env_name"
        fi
    done
}

# List the available environments.
function show_workon_options () {
    verify_homes
    declare -a envs=()
#    (ls "$HOME/src" | grep out && ls "$WORKON_HOME" | grep test |egrep -v '*.egg')
    for d in "${HOMES[@]}"
    do
        for e in $(ls ${d})
        do
            if [[ -f "$d/$e/bin/activate" ]]
            then
                envs=("${envs[@]} $e")
            fi
        done
    done
    echo "$envs"
}

# List or change working virtual environments
#
# Usage: v [environment_name]
#
function v () {
    declare env_name="$1"
    if [ "$env_name" = "" ]
    then
        show_workon_options
        return 1
    fi

    verify_homes || return 1
    verify_exists_environment $env_name || return 1

    activate=$(get_environment ${env_name})/bin/activate

    if [ ! -f "$activate" ]
    then
        echo "ERROR: We can not find an activate script."
        return 1
    fi

    if [ -f "$VIRTUAL_ENV/bin/predeactivate" ]
    then
        source "$VIRTUAL_ENV/bin/predeactivate"
    fi

    source "$activate"

    if [ -f "$VIRTUAL_ENV/bin/postactivate" ]
    then
        source "$VIRTUAL_ENV/bin/postactivate"
    fi

    cd $(get_environment ${env_name})

    return 0
}

#
# Set up tab completion.  (Adapted from Arthur Koziel's version at
# http://arthurkoziel.com/2008/10/11/virtualenvwrapper-bash-completion/)
#
_virtualenvs ()
{
    local cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "`show_workon_options`" -- ${cur}) )
}

complete -o default -o nospace -F _virtualenvs v
complete -o default -o nospace -F _virtualenvs rmvirtualenv
