# http://mercurial.selenic.com/wiki/TipsAndTricks
[ui]
username = Pablo Caro <correo@pablocaro.es>
ignore = ~/.hgignore

[auth]
yaco.prefix = hg.yaco.es
yaco.username = pcaro
yaco.schemes = https

[alias]
blame = annotate -u -n
rec = record
r = pull --rebase --update

[diff]
# To make Mercurial produce the git extended diff format
# hg help diffs
git=True


[web]
style = gitweb
allow_archive = gz, zip, bz2
allow_push = *
description = pcaro repository
contact = Pablo Caro correo@pablocaro.es

[extensions]

# The extension list: http://mercurial.selenic.com/wiki/UsingExtensions

##### DISTRIBUDAS CON MERCURIAL #####

# This extension is a convenience wrapper.
# In the simplest case, hg fetch acts like hg pull -u -- it pulls changes from a remote repository
# into a local one and updates the working directory.
# (This is like the "update" command as found in Subversion or CVS.)
hgext.fetch=

# The record extension provides the record command, which may be used in lieu of commit.
# This command lets you choose which parts of the changes in a working directory you'd like to commit, at the granularity of patch hunks.
# The record extension also provides the qrecord command, if MqExtension is enabled.
hgext.record=

# This extension add color to several mercurial outputs
color=

# The extdiff Mercurial extension allows you to use external programs to compare revisions, or revision with working dir
hgext.extdiff=

# When contributing to a project, sometimes there is the need to keep some patches private, while keeping the whole repository up-to-date.
# In those cases it can be useful to "detach" the local changes,
# synchronize the repository with the mainstream and then append the private changes on top of the new remote changes.
# This operation is called rebase.
rebase =

# Mercurial Patch Queues - manage changes as series of patches
# see: http://mercurial.selenic.com/wiki/MqTutorial
mq =

# Convert repositories from other SCMs into Mercurial
convert =

# This extension uses the progress information logged by hg commands to draw
# progress bars that are as informative as possible
progress =

# Cherrypicking
# This extension allows you to transplant patches from another branch or repository.
# transplant=

# Show revision history alongside an ASCII revision graph
# This extension adds a new command "glog" that behaves
# like (a subset of) the normal log command except that it also prints
# a graph representing the revision history using ASCII characters to the left of the log.
hgext.graphlog =

# Browse command output using an external pager
# View section for configuration
pager =

# This extension adds the churn command which creates a graph
# showing the number of line changes per user for a given repository or file.
hgext.churn=

# Bookmarks are markers on commits that move on commit
# If you do hg bookmark feature the feature bookmark refers to the current changeset.
# As you work and commit changes the bookmark will move forward with every commit you do.
# Usefull to:
# * keep track of different heads
# * Trying out new features or pulling changes that have yet to be reviewed
# * Access the commit:  wherever a command takes -r revision, revision can be a bookmark name
# * Merge and update bookmarks by their names
bookmarks =



##### NO DISTRIBUIDAS CON MERCURIAL #####


# hgsubversion=~/programas/hgsubversion/hgsubversion
# hgshelve=~/programas/hgshelve/hgshelve.py

# Adds the command "hg view"
hgk=/usr/lib/pymodules/python2.6/hgext/hgk.py


# Mercurial git
# http://hg-git.github.com/
# sudo aptitude install mercurial-git
hgext.git =

##### Opciones de la extensiones #####

[progress]
# number of seconds (float) before showing the progress bar
delay = 1

[extdiff]
# add new command called vdiff, runs kdiff3
cmd.vdiff = kdiff3

# add new command called meld, runs meld (no need to name twice)
cmd.meld =

# Side by side diff
cmd.sbsdiff  = diff
opts.sbsdiff = -N -b --side-by-side --width=90

[pager]
pager = LESS='FSRX' less
attend = log, status, diff, annotate, glog, qdiff, cat

[hooks]
# They fail with git clone if the source does not pass the hook!
pretxncommit.pyflakes = python:hghooks.code.pyflakeshook
pretxncommit.pep8 = python:hghooks.code.pep8hook
pretxncommit.pdb = python:hghooks.code.pdbhook

[pep8]
ignore = E501
